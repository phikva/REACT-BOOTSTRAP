{"version":3,"sources":["components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Home","Navbar","Brand","href","Toggle","Collapse","className","Text","Container","Carousel","Item","src","alt","Caption","CardDeck","Card","Img","variant","Body","Title","Footer","Row","Col","md","Accordion","defaultActiveKey","Header","as","Button","eventKey","Tabs","id","Tab","title","Form","Group","controlId","Label","Control","type","placeholder","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e7d92cb2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Acordion from \"react-bootstrap/Accordion\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n    \r\n      <Navbar>\r\n        <Navbar.Brand href=\"#home\">React Bootstrap</Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            Signed in as: <a href=\"#login\">Philip Kvam</a>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <Container>\r\n      <Carousel>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"holder.js/800x400?text=First slide&bg=373940\"\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>First slide label</h3>\r\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"holder.js/800x400?text=Second slide&bg=282c34\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Second slide label</h3>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"holder.js/800x400?text=Third slide&bg=20232a\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Third slide label</h3>\r\n            <p>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n      <div className=\"features-h2\">\r\n      <h2>FEATURES</h2>\r\n      </div>\r\n      <CardDeck>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n          <Card.Body>\r\n            <Card.Title>Card 1</Card.Title>\r\n            <Card.Text>\r\n              This is a wider card with supporting text below as a natural\r\n              lead-in to additional content. This content is a little bit\r\n              longer.\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n          <Card.Body>\r\n            <Card.Title>Card 2</Card.Title>\r\n            <Card.Text>\r\n              This card has supporting text below as a natural lead-in to\r\n              additional content.{\" \"}\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n        <Card>\r\n          <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\r\n          <Card.Body>\r\n            <Card.Title>Card 3</Card.Title>\r\n            <Card.Text>\r\n              This is a wider card with supporting text below as a natural\r\n              lead-in to additional content.\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <small className=\"text-muted\">Last updated 3 mins ago</small>\r\n          </Card.Footer>\r\n        </Card>\r\n      </CardDeck>\r\n\r\n      <Container>\r\n        <Row>\r\n          <Col md={6}>\r\n            <Accordion defaultActiveKey=\"0\" className=\"d-md-none\">\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                    Lorem\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                  <Card.Body>Hello! I'm the body</Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                    Ipsum\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                  <Card.Body>Hello! I'm another body</Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                    Dolor\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                  <Card.Body>Hello! I'm another body</Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n              <Card>\r\n                <Card.Header>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\r\n                    Porta\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                  <Card.Body>Hello! I'm another body</Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            </Accordion>\r\n            <div className=\"d-none d-md-block\">\r\n              <Tabs defaultActiveKey=\"one\" id=\"uncontrolled-tab-example\">\r\n                <Tab eventKey=\"one\" title=\"Lorem\">\r\n                  Suspendisse massa diam, efficitur eu massa euismod, pretium\r\n                  lacinia magna.{\" \"}\r\n                </Tab>\r\n                <Tab eventKey=\"Ipsem\" title=\"Ipsem\"></Tab>\r\n                <Tab eventKey=\"Dolor\" title=\"Dolor\"></Tab>\r\n                <Tab eventKey=\"Porta\" title=\"Porta\"></Tab>\r\n              </Tabs>\r\n            </div>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Form>\r\n              <h2>SUBMIT A COMMENT</h2>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"name\" placeholder=\"Philip kvam\" />\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"ph_kvam@hotmail.com\" />\r\n              </Form.Group>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Send\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      </Container>\r\n\r\n      <footer>Copyright 2020</footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport './sass/style.scss';\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return <Home />;\n  \n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}